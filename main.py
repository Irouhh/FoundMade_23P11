import asyncio
import sqlite3
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram import Bot, Dispatcher, Router, F, types
from aiogram.types import Message, BotCommand, KeyboardButton, ReplyKeyboardMarkup, \
    InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command, StateFilter
from keyboards.anketa import kb_cancel_btn, kb_cancel_back_btn, start_anketa_btn, say_choise_game_btn
from keyboards.games import keyboard_zhanr
from states.stateanketa import Anketa

bot = Bot(token='7051141307:AAHLYtGeFpBTUdAKtI9dKBbmi3QP2uPqtus')
dp = Dispatcher()
router = Router()

@router.message(Command('start'))
async def start_handler(msg: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start"""
    await msg.answer('–ü—Ä–∏–≤–µ—Ç üëã')
    await msg.answer('–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ë–æ—Ç–∞ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è –ª—é–±–æ–π –∏–≥—Ä—ãüéÆ')                 
    await msg.answer('–ó–∞–ø–æ–ª–Ω—è–π –∞–Ω–∫–µ—Ç—É –∏ —Å–æ–±–∏—Ä–∞–π —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É üòáü•∞\n–¢–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±—ã—Å—Ç—Ä—ã–º –ø–æ–∏—Å–∫–æ–ºüòâ', reply_markup=start_anketa_btn)
    await msg.delete()



@router.callback_query(F.data == 'start_anketa_btn')
async def cancel_handler(callback_query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"""
    await state.set_state(Anketa.nickname)
    await callback_query.message.answer('–í–≤–µ–¥–∏—Ç–µ B–∞—à–µ –∏–º—è', reply_markup=kb_cancel_btn)

@router.callback_query(F.data == 'cancel_anketa')
async def cancel_handler(callback_query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –û—Ç–º–µ–Ω–∞"""
    await state.clear()
    await callback_query.message.answer('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞')

@router.message(Anketa.nickname)
async def set_name_by_anketa_handler(msg: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥–∏–º–æ–µ –∏–º—è"""
    await state.update_data(nickname = msg.text)
    await state.set_state(Anketa.age)
    await msg.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç', reply_markup=kb_cancel_back_btn)


@router.callback_query(F.data == 'back_anketa')
async def back_anketa_handler(callback_query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ –ù–∞–∑–∞–¥"""
    current_state = await state.get_state()
    if current_state == Anketa.age:
        await state.set_state(Anketa.nickname)
        await callback_query.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è', reply_markup=kb_cancel_btn)
    elif current_state == Anketa.about:
        await state.set_state(Anketa.age)
        await callback_query.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç', reply_markup=kb_cancel_btn)


@router.message (Anketa.age)
async def set_age_by_anketa_handler(msg: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥–∏–º—ã–π –≤–æ–∑—Ä–∞—Å—Ç"""
    try:
        await state.update_data(age=int(msg.text))
    except ValueError:
        await msg.answer('–í—ã –Ω–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç!')
        await msg.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç', reply_markup=kb_cancel_back_btn)
        return
    await state.set_state(Anketa.about)
    await msg.answer('–í–æ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å?',reply_markup=kb_cancel_back_btn)
    
@router.message (Anketa.about)
async def set_about_by_anketa_handler(msg: Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥–∏–º—É—é –∏–Ω—Ñ—É –æ —é–∑–µ—Ä–µ"""
    await state.update_data(about = msg.text)
    await msg.answer('–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!')
    await msg.answer(str(await state.get_data()))



@router.callback_query(F.data == 'fast_find_btn')
async def func_fast_find(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫"""
    await callback_query.message.answer('–í—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ –∏–≥—Ä—É –≤ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å -> –ù–∞—Ö–æ–¥–∏—Ç–µ —Å–µ–±–µ —Ç–∏–º–º–µ–π—Ç–∞', reply_markup=say_choise_game_btn)

@router.callback_query(F.data == 'choice_game')
async def func_choice_game(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É"""
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä', reply_markup=keyboard_zhanr)

    




"""–ö–û–î –ó–ê–ü–£–°–ö–ê –ë–û–¢–ê"""
async def main():
    await dp.start_polling(bot)

dp.include_routers(router)

if __name__ == '__main__':
    asyncio.run(main())
    